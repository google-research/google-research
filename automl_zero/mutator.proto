// Copyright 2024 The Google Research Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


syntax = "proto2";

package automl_zero;

enum MutationType {
  // Modifies a single parameter within one instruction. Does not change the op.
  ALTER_PARAM_MUTATION_TYPE = 0;

  // Randomizes an instruction, including its op.
  RANDOMIZE_INSTRUCTION_MUTATION_TYPE = 1;

  // Randomizes a whole component function, preserving its size.
  RANDOMIZE_COMPONENT_FUNCTION_MUTATION_TYPE = 2;

  // Does nothing. Useful for debugging.
  IDENTITY_MUTATION_TYPE = 3;

  // Inserts an instruction in a component function.
  INSERT_INSTRUCTION_MUTATION_TYPE = 4;

  // Removes a mutation.
  REMOVE_INSTRUCTION_MUTATION_TYPE = 5;

  // Removes a mutation and inserts another.
  TRADE_INSTRUCTION_MUTATION_TYPE = 6;

  // Randomizes all component functions.
  RANDOMIZE_ALGORITHM_MUTATION_TYPE = 7;
}

message MutationTypeList {
  // Must be non-empty.
  repeated MutationType mutation_types = 1;
}
