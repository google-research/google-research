// Copyright 2024 The Google Research Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package ambient_sensing;

import "intent_recognition/annotated_recording_collection_sensor_options.proto";
import "mediapipe/framework/calculator.proto";

message SetAnnotatedRecordingCollectionMetadataCalculatorOptions {
  extend mediapipe.CalculatorOptions {
    optional SetAnnotatedRecordingCollectionMetadataCalculatorOptions ext =
        268541194;
  }

  message OriginalToSynthesizedStreamMapping {
    optional RecordingCollectionSensorOptions original_stream = 1;
    optional RecordingCollectionSensorOptions synthesized_stream = 2;

    // Whether to increment a counter for conflicting remappings (i.e. when the
    // timestamp for the synthesized stream could be found in multiple ways).
    // Set this to true to suppress counter for expectedd conflicts.
    optional bool suppress_conflict_counters = 3 [default = false];
  }

  repeated OriginalToSynthesizedStreamMapping
      original_to_synthesized_stream_mapping = 1 [deprecated = true];

  // If set to true, will add the original AnnotatedRecordingCollection's
  // recording sequences, excluding sequences for which the type and subtype
  // match a sequence present in the processed AnnotatedRecordingCollection, to
  // the output AnnotatedRecordingCollection.
  optional bool recover_recording_sequences_not_present = 2 [default = false];
}
