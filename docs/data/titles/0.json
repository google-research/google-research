{
    "/video_structure/README.md": "Unsupervised Learning from Videos",
    "/video_structure/README.md:1-57": "Unsupervised Learning of Object Structure and Dynamics from Videos",
    "/video_structure/README.md:58-62": "Citation for 2019 ArXiv Paper",
    "/video_structure/__init__.py": "License Notice: Apache 2.0 for video_structure Package",
    "/video_structure/datasets.py": "TensorFlow Sequence Dataset Pipeline",
    "/video_structure/datasets.py:1-31": "Load Sequence Datasets with TensorFlow Pipeline",
    "/video_structure/datasets.py:119-144": "Data Formatting and Yielding",
    "/video_structure/datasets.py:145-176": "Utility Functions for Dataset Manipulation",
    "/video_structure/datasets.py:177-205": "Split Sequence Tensors to Chunks",
    "/video_structure/datasets.py:206-211": "Chunk, Shuffle, and Return",
    "/video_structure/datasets.py:32-56": "TensorFlow Dataset from Numpy Image Sequences",
    "/video_structure/datasets.py:57-83": "Shuffling and Batching TensorFlow Datasets",
    "/video_structure/datasets.py:85-118": "Numpy Data Reader",
    "/video_structure/datasets_test.py": "Video Dataset Classification Model Testing",
    "/video_structure/datasets_test.py:1-34": "Video Structure Datasets Testing",
    "/video_structure/datasets_test.py:120-127": "Flaky Assertion Test in Datasets",
    "/video_structure/datasets_test.py:35-66": "Dataset Validation and Testing",
    "/video_structure/datasets_test.py:67-92": "Building Keras Model for Image Range Test",
    "/video_structure/datasets_test.py:93-119": "Random Offset Test: Comparing Data Order Determinism",
    "/video_structure/dynamics.py": "TensorFlow VRNN for Video Keypoint Prediction",
    "/video_structure/dynamics.py:1-32": "VRNN Dynamics Model: TensorFlow-Keras Implementation",
    "/video_structure/dynamics.py:115-138": "Computing Latent Beliefs and KL Divergence with RNN",
    "/video_structure/dynamics.py:139-161": "Video Processing Model: Layers, Samplers, and Stop-Gradients",
    "/video_structure/dynamics.py:163-193": "Prior Network and Decoder for Dynamics",
    "/video_structure/dynamics.py:195-225": "Decoder and Posterior Networks in Keras",
    "/video_structure/dynamics.py:226-254": "KL Divergence Estimation Class",
    "/video_structure/dynamics.py:256-282": "Scheduled Sampling Layer for RNN Training",
    "/video_structure/dynamics.py:283-308": "Linear Scheduled Sampling for RNNs",
    "/video_structure/dynamics.py:309-339": "Optimal Keypoint Selection from Latent Belief Samples",
    "/video_structure/dynamics.py:33-60": "Dynamic Keypoint Prediction Model",
    "/video_structure/dynamics.py:340-368": "Sampling Latent Belief Distributions",
    "/video_structure/dynamics.py:369-393": "Optimizing L2 Prediction Loss for Keypoints",
    "/video_structure/dynamics.py:396-419": "Best Sample Selector",
    "/video_structure/dynamics.py:421-426": "Training Sample Selection",
    "/video_structure/dynamics.py:61-85": "VRNN for Video Keypoint Prediction",
    "/video_structure/dynamics.py:86-114": "VRNN Timestep: Keypoints and KL Divergence",
    "/video_structure/dynamics_test.py": "VRNN Training and Sampling Consistency Check",
    "/video_structure/dynamics_test.py:1-32": "Dynamics Test: Python Video Structure",
    "/video_structure/dynamics_test.py:108-136": "TrainingStepCounter Test",
    "/video_structure/dynamics_test.py:137-168": "Testing TrainingStepCounter Functionality",
    "/video_structure/dynamics_test.py:170-193": "Dynamics Test Environment Setup",
    "/video_structure/dynamics_test.py:194-222": "Model Schedule Comparison and Loss Calculation",
    "/video_structure/dynamics_test.py:223-241": "Batch Tensor Creation and Sample Loss Assignment",
    "/video_structure/dynamics_test.py:242-264": "Ensuring Correct Sample Choice in Training and Inference",
    "/video_structure/dynamics_test.py:265-286": "Dynamics Classifier Testing Code",
    "/video_structure/dynamics_test.py:287-302": "RNN State Initialization and Sampling",
    "/video_structure/dynamics_test.py:33-56": "VRNN Model Training and Testing",
    "/video_structure/dynamics_test.py:57-80": "Tensor Shape and KL Divergence Test",
    "/video_structure/dynamics_test.py:81-107": "KLDivergence Layer Test and Annealing",
    "/video_structure/hyperparameters.py": "Configurable Video Hyperparameters in Python",
    "/video_structure/hyperparameters.py:1-34": "Extended Dictionary with Attribute Access",
    "/video_structure/hyperparameters.py:119-121": "Set Kernel Initializer to He-Normal",
    "/video_structure/hyperparameters.py:35-82": "Default Values for Video Structure Model Hyperparameters",
    "/video_structure/hyperparameters.py:83-118": "Hyperparameters for Neural Networks",
    "/video_structure/losses.py": "Temporal Separation Loss for Video Structure",
    "/video_structure/losses.py:1-28": "Temporal Separation Loss",
    "/video_structure/losses.py:29-57": "Separation Loss for Video Trajectories",
    "/video_structure/losses.py:58-68": "Keypoint Loss Calculator",
    "/video_structure/losses_test.py": "Video Structure Losses Test: Parallel Keypoints",
    "/video_structure/losses_test.py:1-33": "Video Structure Losses Test Setup",
    "/video_structure/losses_test.py:34-57": "Parallel Keypoint Loss Test",
    "/video_structure/losses_test.py:58-69": "Temporal Separation Loss Test",
    "/video_structure/ops.py": "TensorFlow Video Representation Operations",
    "/video_structure/ops.py:1-33": "Video Representation TensorFlow Operations",
    "/video_structure/ops.py:125-148": "2D Gaussian Maps and Data Augmentation",
    "/video_structure/ops.py:149-170": "Add XY Coordinates to Image Tensor",
    "/video_structure/ops.py:34-59": "Keypoint Extraction from Heatmaps",
    "/video_structure/ops.py:60-93": "Heatmap Coordinate Reduction Function",
    "/video_structure/ops.py:94-123": "Gaussian Blob Heatmap Generator",
    "/video_structure/ops_test.py": "Testing 2D Heat Maps and Coord Channels",
    "/video_structure/ops_test.py:1-31": "Add Coord Channels Test",
    "/video_structure/ops_test.py:32-60": "Keypoint Coordinate Verification Test",
    "/video_structure/ops_test.py:61-88": "KeypointsToMapsTest: Compute Map Coordinates",
    "/video_structure/ops_test.py:90-108": "Test Compute Map Function Positions",
    "/video_structure/requirements.txt": "TensorFlow GPU Version Specification",
    "/video_structure/run.sh": "Setting Up Video Structure Test Environment",
    "/video_structure/train.py": "Train Video Structure Model with Adam",
    "/video_structure/train.py:1-34": "Training Video Structure Model",
    "/video_structure/train.py:128-146": "Training Video Structure Prediction Model",
    "/video_structure/train.py:35-67": "Dynamic Image Sequence Model",
    "/video_structure/train.py:68-95": "Dynamic Video Reconstruction",
    "/video_structure/train.py:96-127": "Video Structure Model Loss Calculator",
    "/video_structure/vision.py": "Vision-Based Video Encoder-Decoder",
    "/video_structure/vision.py:1-31": "Vision-Based Video Keypoints Transformation",
    "/video_structure/vision.py:127-151": "Video Structure Analysis Model Architecture",
    "/video_structure/vision.py:152-183": "Conv2D-Lambda for Video Keypoints Conversion",
    "/video_structure/vision.py:184-207": "Video Sequence to Image Generation",
    "/video_structure/vision.py:209-233": "Encoder Function for Image Processing",
    "/video_structure/vision.py:235-264": "Image Encoder and Decoder Building Function",
    "/video_structure/vision.py:265-291": "Convolutional Layer Compatibility Check",
    "/video_structure/vision.py:292-310": "Heatmap Penalty Image Decoder",
    "/video_structure/vision.py:34-67": "Keypoints Network for Image Sequences",
    "/video_structure/vision.py:68-98": "Video Encoder for Structure Analysis",
    "/video_structure/vision.py:99-126": "Keypoint-Guided Image Sequence Reconstruction",
    "/video_structure/vision_test.py": "Video Autoencoder Model Dimensions Test",
    "/video_structure/vision_test.py:1-36": "Video Vision Test Cases",
    "/video_structure/vision_test.py:110-143": "Autoencoder for Keypoint Detection and Image Reconstruction",
    "/video_structure/vision_test.py:144-159": "Autoencoder Network Initialization",
    "/video_structure/vision_test.py:37-63": "Autoencoder Test Environment Setup",
    "/video_structure/vision_test.py:64-86": "Model Dimension Consistency Tests",
    "/video_structure/vision_test.py:87-109": "Video Structure Image Verification",
    "/video_timeline_modeling/README.md": "YouTube News Timeline Dataset",
    "/video_timeline_modeling/README.md:1-14": "YouTube News Timeline Dataset",
    "/video_timeline_modeling/README.md:14-31": "Dataset Structure & Distribution",
    "/video_timeline_modeling/README.md:32-69": "Video Timeline Modeling Dataset",
    "/video_timeline_modeling/README.md:69-75": "NIPS Datasets and Benchmarks",
    "/video_timeline_modeling/requirements.txt": "Dependencies for Video Timeline Modeling",
    "/video_timeline_modeling/run.sh": "Video Timeline Modeling Setup",
    "/video_timeline_modeling/setup.py": "Video Timeline Modeling Setup",
    "/video_timeline_modeling/vtm/__init__.py": "License Notice: Apache 2.0 for Video Structure Package",
    "/video_timeline_modeling/vtm/dataset.py": "Video Timeline Modeling Dataset",
    "/video_timeline_modeling/vtm/dataset.py:1-34": "Variable-Length Video Dataset for Timeline Modeling",
    "/video_timeline_modeling/vtm/dataset.py:108-131": "TFRecord Dataset Loader Class",
    "/video_timeline_modeling/vtm/dataset.py:132-154": "Ensure Dataset Length Match",
    "/video_timeline_modeling/vtm/dataset.py:155-184": "Video Timeline Modeling Dataset",
    "/video_timeline_modeling/vtm/dataset.py:185-188": "Dataset Class with Length and Indexing Methods",
    "/video_timeline_modeling/vtm/dataset.py:36-54": "Cluster-Aware Video Dataset",
    "/video_timeline_modeling/vtm/dataset.py:55-79": "Batching Data for Video Timeline Model",
    "/video_timeline_modeling/vtm/dataset.py:80-107": "Pad and Mask for Timeline Dataset",
    "/video_timeline_modeling/vtm/eval.py": "Video Timeline Modeling Evaluation Tool",
    "/video_timeline_modeling/vtm/eval.py:1-30": "Video Timeline Modeling Evaluation Script",
    "/video_timeline_modeling/vtm/eval.py:115-148": "Video Timeline Evaluation Metrics",
    "/video_timeline_modeling/vtm/eval.py:149-175": "Evaluation Metrics for Video Timeline Modeling",
    "/video_timeline_modeling/vtm/eval.py:177-208": "Eval Metrics Aggregation for Timeline Dataset",
    "/video_timeline_modeling/vtm/eval.py:209-231": "Average Video Timeline Metrics",
    "/video_timeline_modeling/vtm/eval.py:232-267": "Video-Level and Timeline Averages Evaluator",
    "/video_timeline_modeling/vtm/eval.py:268-287": "Video Timeline Evaluation and Metrics",
    "/video_timeline_modeling/vtm/eval.py:31-67": "Video Timeline Model Evaluation Metrics",
    "/video_timeline_modeling/vtm/eval.py:68-95": "Pairwise Order Comparison in Cluster Assignments",
    "/video_timeline_modeling/vtm/eval.py:96-113": "Video Timeline Modeling Evaluation Metric",
    "/video_timeline_modeling/vtm/main.py": "Transformer-based Video Timeline Model",
    "/video_timeline_modeling/vtm/main.py:1-33": "Video Timeline Modeling with PyTorch on XCloud",
    "/video_timeline_modeling/vtm/main.py:119-139": "Training Hyperparameters and GPU Check",
    "/video_timeline_modeling/vtm/main.py:140-172": "Timeline Dataset Initialization",
    "/video_timeline_modeling/vtm/main.py:173-203": "Training Loop: Video Timeline Modeling",
    "/video_timeline_modeling/vtm/main.py:204-225": "Video Cluster Semantics Loss Calculation",
    "/video_timeline_modeling/vtm/main.py:226-247": "Video Timeline Modeling Loss Calculation",
    "/video_timeline_modeling/vtm/main.py:248-269": "Knowledge Distillation for Video Modeling",
    "/video_timeline_modeling/vtm/main.py:270-290": "Loss Calculator & Tracker",
    "/video_timeline_modeling/vtm/main.py:292-313": "Online Knowledge Distillation in Video Timeline Modeling",
    "/video_timeline_modeling/vtm/main.py:314-334": "Distillation Loss Backpropagation Algorithm",
    "/video_timeline_modeling/vtm/main.py:335-358": "Video Timeline Modeling Loss Tracker",
    "/video_timeline_modeling/vtm/main.py:34-55": "Video Timeline Modeling: Training and Inference Control",
    "/video_timeline_modeling/vtm/main.py:359-383": "Video Timeline Model Accuracy",
    "/video_timeline_modeling/vtm/main.py:384-409": "Video Timeline Model Accuracy",
    "/video_timeline_modeling/vtm/main.py:410-438": "Model Saving and Prediction Functions",
    "/video_timeline_modeling/vtm/main.py:439-459": "Model Initialization Based on FLAGS",
    "/video_timeline_modeling/vtm/main.py:460-477": "Creating Teacher Model for Knowledge Distillation",
    "/video_timeline_modeling/vtm/main.py:478-495": "Train or Load Timeline Model for Inference",
    "/video_timeline_modeling/vtm/main.py:496-525": "Save, Initialize and Load Model Data",
    "/video_timeline_modeling/vtm/main.py:526-548": "Training and Testing Datasets Iteration with Loss Calculations",
    "/video_timeline_modeling/vtm/main.py:549-567": "Distillation-Guided Model Training",
    "/video_timeline_modeling/vtm/main.py:56-77": "Video Timeline Modeling Control Flags",
    "/video_timeline_modeling/vtm/main.py:568-586": "TensorBoard Writer for Metrics",
    "/video_timeline_modeling/vtm/main.py:587-596": "TensorFlow Job Completion Logging",
    "/video_timeline_modeling/vtm/main.py:78-98": "Video Timeline Modeling: Flag-based Settings",
    "/video_timeline_modeling/vtm/main.py:99-117": "Customizing Transformer Hyperparameters",
    "/video_timeline_modeling/vtm/model/__init__.py": "Importing VT-Model Components",
    "/video_timeline_modeling/vtm/model/attention_head.py": "Video Timeline Attention Head",
    "/video_timeline_modeling/vtm/model/attention_head.py:1-29": "Attention Head for Video Timeline Modeling",
    "/video_timeline_modeling/vtm/model/attention_head.py:30-59": "Attention Head Class and Calculation",
    "/video_timeline_modeling/vtm/model/attention_head.py:60-60": "Softmax-Applied Attention Head",
    "/video_timeline_modeling/vtm/model/encoder.py": "Transformer Encoder with Positional Embedding",
    "/video_timeline_modeling/vtm/model/encoder.py:1-30": "Positional Encoding for Transformer Encoder",
    "/video_timeline_modeling/vtm/model/encoder.py:32-66": "Positional Encoding for Video Timeline Modeling",
    "/video_timeline_modeling/vtm/model/encoder.py:67-89": "Transformer Encoder PyTorch Implementation",
    "/video_timeline_modeling/vtm/model/model.py": "Video Timeline Model with Attention-based Cluster Computations",
    "/video_timeline_modeling/vtm/model/model.py:1-32": "Video Timeline Modeling: Main Model Definition",
    "/video_timeline_modeling/vtm/model/model.py:103-125": "Attention-based Video Timeline Modeling",
    "/video_timeline_modeling/vtm/model/model.py:126-154": "Video Timeline Modeling: Semantics-Aware Cluster Classifier",
    "/video_timeline_modeling/vtm/model/model.py:155-178": "Initializing Video Module and Forward Pass",
    "/video_timeline_modeling/vtm/model/model.py:179-196": "Normalized Attention Scores via Log Softmax",
    "/video_timeline_modeling/vtm/model/model.py:33-56": "Initializing Video Timeline Model Parameters",
    "/video_timeline_modeling/vtm/model/model.py:57-79": "Video Timeline Model (VTM) Python Implementation",
    "/video_timeline_modeling/vtm/model/model.py:80-102": "Batch Video Attention Model",
    "/video_timeline_modeling/vtm/test.py": "Video Timeline Modeling Testing with Transformers",
    "/video_timeline_modeling/vtm/test.py:1-31": "Video Timeline Modeling Test Module",
    "/video_timeline_modeling/vtm/test.py:109-126": "Timeline Dataset Initialization and Splitting",
    "/video_timeline_modeling/vtm/test.py:32-62": "Encoder and Attention Head Model Test",
    "/video_timeline_modeling/vtm/test.py:63-87": "Testing Timeline Model Log Score",
    "/video_timeline_modeling/vtm/test.py:89-108": "Testing VideoTimeline Modeling Dataset"
}