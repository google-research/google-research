{"_default": {"1": {"path": "/video_structure/README.md", "hash": "f4da1133da26bad6988ee51b84c6478c", "title": "Unsupervised Learning from Videos"}, "2": {"path": "/video_structure/README.md:1-57", "hash": "ace897e6a076171f07779678a796c1e3", "title": "Unsupervised Learning of Object Structure and Dynamics from Videos"}, "3": {"path": "/video_structure/README.md:58-62", "hash": "9e0b0dfb8e0cadff5b7bef338dfb1076", "title": "Citation for 2019 ArXiv Paper"}, "4": {"path": "/video_structure/__init__.py", "hash": "a9a358a5ec27fb887a50664ec478ea65", "title": "License Notice: Apache 2.0 for video_structure Package"}, "5": {"path": "/video_structure/datasets.py", "hash": "885a2abc40efd2adb65c33b58d6115a8", "title": "TensorFlow Sequence Dataset Pipeline"}, "6": {"path": "/video_structure/datasets.py:1-31", "hash": "2eb6d4398f2177006ef94e86061727c1", "title": "Load Sequence Datasets with TensorFlow Pipeline"}, "7": {"path": "/video_structure/datasets.py:32-56", "hash": "3c30f6b7888d23e48b254b59046748e2", "title": "TensorFlow Dataset from Numpy Image Sequences"}, "8": {"path": "/video_structure/datasets.py:57-83", "hash": "c15f854a096884b460089086a06ea47a", "title": "Shuffling and Batching TensorFlow Datasets"}, "9": {"path": "/video_structure/datasets.py:85-118", "hash": "05fddfa85cecb12fe754396d3fcaf4a8", "title": "Numpy Data Reader"}, "10": {"path": "/video_structure/datasets.py:119-144", "hash": "ba99fcd17fc84e83ec63a1bc8d8b37e9", "title": "Data Formatting and Yielding"}, "11": {"path": "/video_structure/datasets.py:145-176", "hash": "235477da5c97340f1264881ee27d02f4", "title": "Utility Functions for Dataset Manipulation"}, "12": {"path": "/video_structure/datasets.py:177-205", "hash": "dc27e6b7fbf2912d565819e6a12e6761", "title": "Split Sequence Tensors to Chunks"}, "13": {"path": "/video_structure/datasets.py:206-211", "hash": "617afb616e14f749afe984c2d470d5d5", "title": "Chunk, Shuffle, and Return"}, "14": {"path": "/video_structure/datasets_test.py", "hash": "273521a02554055c18004140ec804fff", "title": "Video Dataset Classification Model Testing"}, "15": {"path": "/video_structure/datasets_test.py:1-34", "hash": "147e70b540b3f08a1d4639a903019f9a", "title": "Video Structure Datasets Testing"}, "16": {"path": "/video_structure/datasets_test.py:35-66", "hash": "31078b4614a76c9c3321af2b16ef9c2e", "title": "Dataset Validation and Testing"}, "17": {"path": "/video_structure/datasets_test.py:67-92", "hash": "f3ae1854607ca9ce9ed3af581e7d7574", "title": "Building Keras Model for Image Range Test"}, "18": {"path": "/video_structure/datasets_test.py:93-119", "hash": "07a607ec345318f931ad321eca87f2cb", "title": "Random Offset Test: Comparing Data Order Determinism"}, "19": {"path": "/video_structure/datasets_test.py:120-127", "hash": "3e4649a8ea2a2866b7d17de88705f599", "title": "Flaky Assertion Test in Datasets"}, "20": {"path": "/video_structure/dynamics.py", "hash": "ffeb286a48f53f1b5292ecfa702ba5bd", "title": "TensorFlow VRNN for Video Keypoint Prediction"}, "21": {"path": "/video_structure/dynamics.py:1-32", "hash": "b8c3762fce9d0705eff31ed9f28e2445", "title": "VRNN Dynamics Model: TensorFlow-Keras Implementation"}, "22": {"path": "/video_structure/dynamics.py:33-60", "hash": "aa9d27d6460b0e1775d34d36f1a608dc", "title": "Dynamic Keypoint Prediction Model"}, "23": {"path": "/video_structure/dynamics.py:61-85", "hash": "20ca169716a27b88fdf831f62ceeeb91", "title": "VRNN for Video Keypoint Prediction"}, "24": {"path": "/video_structure/dynamics.py:86-114", "hash": "0f0e9a28b4315582f24e55a90e9aa4a5", "title": "VRNN Timestep: Keypoints and KL Divergence"}, "25": {"path": "/video_structure/dynamics.py:115-138", "hash": "1338d737f04026ff09a9b5944890060c", "title": "Computing Latent Beliefs and KL Divergence with RNN"}, "26": {"path": "/video_structure/dynamics.py:139-161", "hash": "d2729adeb1f881cb9b179fd81f116d01", "title": "Video Processing Model: Layers, Samplers, and Stop-Gradients"}, "27": {"path": "/video_structure/dynamics.py:163-193", "hash": "e679d0b604799ad4d9e3be7911062f46", "title": "Prior Network and Decoder for Dynamics"}, "28": {"path": "/video_structure/dynamics.py:195-225", "hash": "64b7a5b726e9fd90a1e5567212469a29", "title": "Decoder and Posterior Networks in Keras"}, "29": {"path": "/video_structure/dynamics.py:226-254", "hash": "4bede9bd2a06b854e193cdca140d2349", "title": "KL Divergence Estimation Class"}, "30": {"path": "/video_structure/dynamics.py:256-282", "hash": "879f8abbbc1f9448b4a334ec194d6f74", "title": "Scheduled Sampling Layer for RNN Training"}, "31": {"path": "/video_structure/dynamics.py:283-308", "hash": "a6e5ff16ef7068a173337fab3a1c0772", "title": "Linear Scheduled Sampling for RNNs"}, "32": {"path": "/video_structure/dynamics.py:309-339", "hash": "f37e7b8e641bf5af404b322ba44a71b1", "title": "Optimal Keypoint Selection from Latent Belief Samples"}, "33": {"path": "/video_structure/dynamics.py:340-368", "hash": "590ba8e89bf73fa1ba8c7663210d81c6", "title": "Sampling Latent Belief Distributions"}, "34": {"path": "/video_structure/dynamics.py:369-393", "hash": "64c72b528f60077fc7b928ff993fb532", "title": "Optimizing L2 Prediction Loss for Keypoints"}, "35": {"path": "/video_structure/dynamics.py:396-419", "hash": "9db8e7cd1e5afe6558d372acb005163e", "title": "Best Sample Selector"}, "36": {"path": "/video_structure/dynamics.py:421-426", "hash": "5a11550e9cdc9f31f9003c4d5a00c7b5", "title": "Training Sample Selection"}, "37": {"path": "/video_structure/dynamics_test.py", "hash": "f6c8b8b2833d43bb7bcfc2cb36f5b7dd", "title": "VRNN Training and Sampling Consistency Check"}, "38": {"path": "/video_structure/dynamics_test.py:1-32", "hash": "362628c03f7f928268056c65784974a3", "title": "Dynamics Test: Python Video Structure"}, "39": {"path": "/video_structure/dynamics_test.py:33-56", "hash": "f68323685dc64a1b05ea55aeeb6c9a19", "title": "VRNN Model Training and Testing"}, "40": {"path": "/video_structure/dynamics_test.py:57-80", "hash": "f378a64f6689f3971404fac0c38d6bbe", "title": "Tensor Shape and KL Divergence Test"}, "41": {"path": "/video_structure/dynamics_test.py:81-107", "hash": "89b364160e161a01976589c4560e0e34", "title": "KLDivergence Layer Test and Annealing"}, "42": {"path": "/video_structure/dynamics_test.py:108-136", "hash": "e6d8cbb2e5e42b84ef93067ccd5a4430", "title": "TrainingStepCounter Test"}, "43": {"path": "/video_structure/dynamics_test.py:137-168", "hash": "403728e49d3ec4ca902d6b042b5f2286", "title": "Testing TrainingStepCounter Functionality"}, "44": {"path": "/video_structure/dynamics_test.py:170-193", "hash": "a1b3335b12336b54281646bade63051a", "title": "Dynamics Test Environment Setup"}, "45": {"path": "/video_structure/dynamics_test.py:194-222", "hash": "25da15ebbbb35c5dfbe414a52622d300", "title": "Model Schedule Comparison and Loss Calculation"}, "46": {"path": "/video_structure/dynamics_test.py:223-241", "hash": "c5202dccb462961749f28357c246a8fa", "title": "Batch Tensor Creation and Sample Loss Assignment"}, "47": {"path": "/video_structure/dynamics_test.py:242-264", "hash": "aae258d202f558df3eaae71b6dee91c0", "title": "Ensuring Correct Sample Choice in Training and Inference"}, "48": {"path": "/video_structure/dynamics_test.py:265-286", "hash": "0d50d5851f166a0c181e7311cf321d57", "title": "Dynamics Classifier Testing Code"}, "49": {"path": "/video_structure/dynamics_test.py:287-302", "hash": "95300bc057f9eef49036166df3dea19c", "title": "RNN State Initialization and Sampling"}, "50": {"path": "/video_structure/hyperparameters.py", "hash": "9c2c6ae0b90d81c317c82cd30a8f1fb2", "title": "Configurable Video Hyperparameters in Python"}, "51": {"path": "/video_structure/hyperparameters.py:1-34", "hash": "2e5c6069a2b28ed262469f15c2c9fbf1", "title": "Extended Dictionary with Attribute Access"}, "52": {"path": "/video_structure/hyperparameters.py:35-82", "hash": "d144d277a429bf59d597457dcb5d10a6", "title": "Default Values for Video Structure Model Hyperparameters"}, "53": {"path": "/video_structure/hyperparameters.py:83-118", "hash": "ddcfe9a1a7372d4f6dc27cd9bba077ff", "title": "Hyperparameters for Neural Networks"}, "54": {"path": "/video_structure/hyperparameters.py:119-121", "hash": "5abf1b9e1e76ba1265d633f170df6fb3", "title": "Set Kernel Initializer to He-Normal"}, "55": {"path": "/video_structure/losses.py", "hash": "f8f52cc82e4f98f81945be01de68b4bb", "title": "Temporal Separation Loss for Video Structure"}, "56": {"path": "/video_structure/losses.py:1-28", "hash": "1ac99e80da6b3f9660e768a443f2a016", "title": "Temporal Separation Loss"}, "57": {"path": "/video_structure/losses.py:29-57", "hash": "f7eb05108e38d4f21c777191b714d391", "title": "Separation Loss for Video Trajectories"}, "58": {"path": "/video_structure/losses.py:58-68", "hash": "b70272149519a1561e1f84e1737991ec", "title": "Keypoint Loss Calculator"}, "59": {"path": "/video_structure/losses_test.py", "hash": "4f69b41f5906721476d7916f632f2f59", "title": "Video Structure Losses Test: Parallel Keypoints"}, "60": {"path": "/video_structure/losses_test.py:1-33", "hash": "e706eead3795e0ed45095dc5e933d9db", "title": "Video Structure Losses Test Setup"}, "61": {"path": "/video_structure/losses_test.py:34-57", "hash": "56d88e5e8662ddaae9d07c7cb5515055", "title": "Parallel Keypoint Loss Test"}, "62": {"path": "/video_structure/losses_test.py:58-69", "hash": "4572c6260d2ddeb5bba32fa5fd279f18", "title": "Temporal Separation Loss Test"}, "63": {"path": "/video_structure/ops.py", "hash": "d977a57cf1ac1437fa1c9d192f3fd7a8", "title": "TensorFlow Video Representation Operations"}, "64": {"path": "/video_structure/ops.py:1-33", "hash": "3a932370a680b16144ad46e477851640", "title": "Video Representation TensorFlow Operations"}, "65": {"path": "/video_structure/ops.py:34-59", "hash": "bce161dabc651ee7a9a56a56a2bbe123", "title": "Keypoint Extraction from Heatmaps"}, "66": {"path": "/video_structure/ops.py:60-93", "hash": "7ecf5df9df13c04519816b56801d35d4", "title": "Heatmap Coordinate Reduction Function"}, "67": {"path": "/video_structure/ops.py:94-123", "hash": "c8fb1a4f13cba7551492cb8bff9ba8ee", "title": "Gaussian Blob Heatmap Generator"}, "68": {"path": "/video_structure/ops.py:125-148", "hash": "fb69dfc0066a1a652d7dd2d925f1b0c9", "title": "2D Gaussian Maps and Data Augmentation"}, "69": {"path": "/video_structure/ops.py:149-170", "hash": "9e0b44fcccd5951f04c9d3da0033669a", "title": "Add XY Coordinates to Image Tensor"}, "70": {"path": "/video_structure/ops_test.py", "hash": "3b748519fe1c2ae6de2e06ca3b31f6cc", "title": "Testing 2D Heat Maps and Coord Channels"}, "71": {"path": "/video_structure/ops_test.py:1-31", "hash": "2fc4882b1ac72b1566862e2e473e34ae", "title": "Add Coord Channels Test"}, "72": {"path": "/video_structure/ops_test.py:32-60", "hash": "de53c83b2a01ef33e967e6118d2a3a11", "title": "Keypoint Coordinate Verification Test"}, "73": {"path": "/video_structure/ops_test.py:61-88", "hash": "d38f1ce5fd95a8481c154db62812a39a", "title": "KeypointsToMapsTest: Compute Map Coordinates"}, "74": {"path": "/video_structure/ops_test.py:90-108", "hash": "0372c4bb2159699a627d619f1ee4743c", "title": "Test Compute Map Function Positions"}, "75": {"path": "/video_structure/requirements.txt", "hash": "83c75c9a24569c03e0985a62489727ba", "title": "TensorFlow GPU Version Specification"}, "76": {"path": "/video_structure/run.sh", "hash": "c38bfdac8305b68349fe82b37646b689", "title": "Setting Up Video Structure Test Environment"}, "77": {"path": "/video_structure/train.py", "hash": "1483fd0c1f55ff8f2618985d1c48cb05", "title": "Train Video Structure Model with Adam"}, "78": {"path": "/video_structure/train.py:1-34", "hash": "68254d3b6ab3dcf78768d9e410e39038", "title": "Training Video Structure Model"}, "79": {"path": "/video_structure/train.py:35-67", "hash": "ee7e80fcce3fb9f836e6634c369cab7d", "title": "Dynamic Image Sequence Model"}, "80": {"path": "/video_structure/train.py:68-95", "hash": "7ed492a5409514e6ae1c49930b3df6a8", "title": "Dynamic Video Reconstruction"}, "81": {"path": "/video_structure/train.py:96-127", "hash": "fcc3cf137c877e3c5b575a79f7058182", "title": "Video Structure Model Loss Calculator"}, "82": {"path": "/video_structure/train.py:128-146", "hash": "b960dcbcb5f7391ae41fc25c62f9e7e8", "title": "Training Video Structure Prediction Model"}, "83": {"path": "/video_structure/vision.py", "hash": "1d21e71223e0c897e34273a07e2c91c0", "title": "Vision-Based Video Encoder-Decoder"}, "84": {"path": "/video_structure/vision.py:1-31", "hash": "2284ef39249ed66185c5bc70797f87f4", "title": "Vision-Based Video Keypoints Transformation"}, "85": {"path": "/video_structure/vision.py:34-67", "hash": "5f8139040a1870177d648aafb20bf721", "title": "Keypoints Network for Image Sequences"}, "86": {"path": "/video_structure/vision.py:68-98", "hash": "27c68dce415a77a2defd3c8e8f949a39", "title": "Video Encoder for Structure Analysis"}, "87": {"path": "/video_structure/vision.py:99-126", "hash": "0f71e58e89e3ed769432f775d37497e1", "title": "Keypoint-Guided Image Sequence Reconstruction"}, "88": {"path": "/video_structure/vision.py:127-151", "hash": "ece6b6162d62ca7a8277eb1082cce1b4", "title": "Video Structure Analysis Model Architecture"}, "89": {"path": "/video_structure/vision.py:152-183", "hash": "1001e339b23990044ad3f4802bd5dd6b", "title": "Conv2D-Lambda for Video Keypoints Conversion"}, "90": {"path": "/video_structure/vision.py:184-207", "hash": "f6265dc9395dc47691b769ebf9be197f", "title": "Video Sequence to Image Generation"}, "91": {"path": "/video_structure/vision.py:209-233", "hash": "e2b400695b0e902d2cc99e6971e29c5a", "title": "Encoder Function for Image Processing"}, "92": {"path": "/video_structure/vision.py:235-264", "hash": "c325a170994619ff0e605dd060d08c95", "title": "Image Encoder and Decoder Building Function"}, "93": {"path": "/video_structure/vision.py:265-291", "hash": "7839d2dd375ce91d6de949b60dba3692", "title": "Convolutional Layer Compatibility Check"}, "94": {"path": "/video_structure/vision.py:292-310", "hash": "c60de9137dc5f3c3926dc626909f358d", "title": "Heatmap Penalty Image Decoder"}, "95": {"path": "/video_structure/vision_test.py", "hash": "bb0af0c04de952ab073114918f927909", "title": "Video Autoencoder Model Dimensions Test"}, "96": {"path": "/video_structure/vision_test.py:1-36", "hash": "81e1baf616a15185c251d99f64071676", "title": "Video Vision Test Cases"}, "97": {"path": "/video_structure/vision_test.py:37-63", "hash": "232e9736173e2eee9118b386b71d5376", "title": "Autoencoder Test Environment Setup"}, "98": {"path": "/video_structure/vision_test.py:64-86", "hash": "a17a16e4f5073ea04a0cf1798f555d32", "title": "Model Dimension Consistency Tests"}, "99": {"path": "/video_structure/vision_test.py:87-109", "hash": "9e4740c0bbf5f6bdc1238e09e9e439f7", "title": "Video Structure Image Verification"}, "100": {"path": "/video_structure/vision_test.py:110-143", "hash": "b5a540c32d88bb2fc8123d91d398c490", "title": "Autoencoder for Keypoint Detection and Image Reconstruction"}, "101": {"path": "/video_structure/vision_test.py:144-159", "hash": "1ee6b56bf277ec61e5f8f531d8d752d5", "title": "Autoencoder Network Initialization"}, "102": {"path": "/video_timeline_modeling/README.md", "hash": "9a953c8f0a451f062735f9f474f96f08", "title": "YouTube News Timeline Dataset"}, "103": {"path": "/video_timeline_modeling/README.md:1-14", "hash": "f6f6ed5916a26361876553a4493f0f5d", "title": "YouTube News Timeline Dataset"}, "104": {"path": "/video_timeline_modeling/README.md:14-31", "hash": "56b592fa06f4c2b61a1ba261e9efe00c", "title": "Dataset Structure & Distribution"}, "105": {"path": "/video_timeline_modeling/README.md:32-69", "hash": "e9a73e245760abab4c95f693b56375ef", "title": "Video Timeline Modeling Dataset"}, "106": {"path": "/video_timeline_modeling/README.md:69-75", "hash": "a6627125bd781f649db4b3931be489d1", "title": "NIPS Datasets and Benchmarks"}, "107": {"path": "/video_timeline_modeling/requirements.txt", "hash": "5ff8f3e0a03333cd9756a0b8bfdf898e", "title": "Dependencies for Video Timeline Modeling"}, "108": {"path": "/video_timeline_modeling/run.sh", "hash": "3ec35653e3438f7412136842de12b720", "title": "Video Timeline Modeling Setup"}, "109": {"path": "/video_timeline_modeling/setup.py", "hash": "22e7de0d74e65dcfeb7b7b38102fd42b", "title": "Video Timeline Modeling Setup"}, "110": {"path": "/video_timeline_modeling/vtm/__init__.py", "hash": "a9a358a5ec27fb887a50664ec478ea65", "title": "License Notice: Apache 2.0 for Video Structure Package"}, "111": {"path": "/video_timeline_modeling/vtm/dataset.py", "hash": "b64e43179b50500a92e2e4127fadfab8", "title": "Video Timeline Modeling Dataset"}, "112": {"path": "/video_timeline_modeling/vtm/dataset.py:1-34", "hash": "140c998677f2712d9c5c93578e714aea", "title": "Variable-Length Video Dataset for Timeline Modeling"}, "113": {"path": "/video_timeline_modeling/vtm/dataset.py:36-54", "hash": "e8e8327603a90826075db6eaef18ae6c", "title": "Cluster-Aware Video Dataset"}, "114": {"path": "/video_timeline_modeling/vtm/dataset.py:55-79", "hash": "7de20bb5b0d46154737e13db1f512d65", "title": "Batching Data for Video Timeline Model"}, "115": {"path": "/video_timeline_modeling/vtm/dataset.py:80-107", "hash": "47aa4fc1b850333ad30d3ff415e48993", "title": "Pad and Mask for Timeline Dataset"}, "116": {"path": "/video_timeline_modeling/vtm/dataset.py:108-131", "hash": "8571f14daa60419fe2975e88eaed19c1", "title": "TFRecord Dataset Loader Class"}, "117": {"path": "/video_timeline_modeling/vtm/dataset.py:132-154", "hash": "9790cc8e65612ad1448962f77b011f1c", "title": "Ensure Dataset Length Match"}, "118": {"path": "/video_timeline_modeling/vtm/dataset.py:155-184", "hash": "dc4f9d897fc31577585dffb809587170", "title": "Video Timeline Modeling Dataset"}, "119": {"path": "/video_timeline_modeling/vtm/dataset.py:185-188", "hash": "cbc485de4162c92b3a0d4f26d7b4dd3a", "title": "Dataset Class with Length and Indexing Methods"}, "120": {"path": "/video_timeline_modeling/vtm/eval.py", "hash": "4e31d0978f1b993875d803bac0b53d7d", "title": "Video Timeline Modeling Evaluation Tool"}, "121": {"path": "/video_timeline_modeling/vtm/eval.py:1-30", "hash": "2d942b06134ecbbadff2e837c22c5b61", "title": "Video Timeline Modeling Evaluation Script"}, "122": {"path": "/video_timeline_modeling/vtm/eval.py:31-67", "hash": "5b358e4f6260c0cc3a69702c021115d9", "title": "Video Timeline Model Evaluation Metrics"}, "123": {"path": "/video_timeline_modeling/vtm/eval.py:68-95", "hash": "e54967090406ed862fff3ecf5ca52811", "title": "Pairwise Order Comparison in Cluster Assignments"}, "124": {"path": "/video_timeline_modeling/vtm/eval.py:96-113", "hash": "55427cb3aeeea4324b4893d371c1cae4", "title": "Video Timeline Modeling Evaluation Metric"}, "125": {"path": "/video_timeline_modeling/vtm/eval.py:115-148", "hash": "1a887e1f4166830e09280e6b0541110d", "title": "Video Timeline Evaluation Metrics"}, "126": {"path": "/video_timeline_modeling/vtm/eval.py:149-175", "hash": "4f2c63c69ad16b70f537ae8d722e1be5", "title": "Evaluation Metrics for Video Timeline Modeling"}, "127": {"path": "/video_timeline_modeling/vtm/eval.py:177-208", "hash": "51f92e80ac9129e871ec65e90808bc35", "title": "Eval Metrics Aggregation for Timeline Dataset"}, "128": {"path": "/video_timeline_modeling/vtm/eval.py:209-231", "hash": "dbd90927cabcd4c2c5ecb18f265acefd", "title": "Average Video Timeline Metrics"}, "129": {"path": "/video_timeline_modeling/vtm/eval.py:232-267", "hash": "c1e1d2bf18453f367a038e5e8797398f", "title": "Video-Level and Timeline Averages Evaluator"}, "130": {"path": "/video_timeline_modeling/vtm/eval.py:268-287", "hash": "064cb30f772344ae553fdc5e13b1da2a", "title": "Video Timeline Evaluation and Metrics"}, "131": {"path": "/video_timeline_modeling/vtm/main.py", "hash": "4dd9da7bf6cc61074fc4b6e53d3ce649", "title": "Transformer-based Video Timeline Model"}, "132": {"path": "/video_timeline_modeling/vtm/main.py:1-33", "hash": "7023e6217dfa97ba860119a577482cb3", "title": "Video Timeline Modeling with PyTorch on XCloud"}, "133": {"path": "/video_timeline_modeling/vtm/main.py:34-55", "hash": "018491acc82c8221ddf8e0eb355daf95", "title": "Video Timeline Modeling: Training and Inference Control"}, "134": {"path": "/video_timeline_modeling/vtm/main.py:56-77", "hash": "89868648c05c4901a91aec2f11fa7e0c", "title": "Video Timeline Modeling Control Flags"}, "135": {"path": "/video_timeline_modeling/vtm/main.py:78-98", "hash": "0065ec3b4420d45ad7862db26b935026", "title": "Video Timeline Modeling: Flag-based Settings"}, "136": {"path": "/video_timeline_modeling/vtm/main.py:99-117", "hash": "bc63404dbfc2f3c9ba523c2394af237e", "title": "Customizing Transformer Hyperparameters"}, "137": {"path": "/video_timeline_modeling/vtm/main.py:119-139", "hash": "1aec8ca980d82d6506ecdc2c6d985f0c", "title": "Training Hyperparameters and GPU Check"}, "138": {"path": "/video_timeline_modeling/vtm/main.py:140-172", "hash": "25971fbb5162e009d05aacc32b528c40", "title": "Timeline Dataset Initialization"}, "139": {"path": "/video_timeline_modeling/vtm/main.py:173-203", "hash": "48e557e8dbd448afb80dade5e44c4a30", "title": "Training Loop: Video Timeline Modeling"}, "140": {"path": "/video_timeline_modeling/vtm/main.py:204-225", "hash": "ed36dd480e5070c95c50e5ef0734722e", "title": "Video Cluster Semantics Loss Calculation"}, "141": {"path": "/video_timeline_modeling/vtm/main.py:226-247", "hash": "4340388510a1d8adf695b05e55295b03", "title": "Video Timeline Modeling Loss Calculation"}, "142": {"path": "/video_timeline_modeling/vtm/main.py:248-269", "hash": "5b74b9bd65d50de205f2977933244044", "title": "Knowledge Distillation for Video Modeling"}, "143": {"path": "/video_timeline_modeling/vtm/main.py:270-290", "hash": "94919c52a92cc515f64a47c88deb74df", "title": "Loss Calculator & Tracker"}, "144": {"path": "/video_timeline_modeling/vtm/main.py:292-313", "hash": "64b17f54331cfbbc836ea187de45ad49", "title": "Online Knowledge Distillation in Video Timeline Modeling"}, "145": {"path": "/video_timeline_modeling/vtm/main.py:314-334", "hash": "23ee9b4ac7c868f219b347c0e6bce81a", "title": "Distillation Loss Backpropagation Algorithm"}, "146": {"path": "/video_timeline_modeling/vtm/main.py:335-358", "hash": "28c09b68cc8627801d85e80fbc786617", "title": "Video Timeline Modeling Loss Tracker"}, "147": {"path": "/video_timeline_modeling/vtm/main.py:359-383", "hash": "391b112fb2de1659fe0a551f2818ac89", "title": "Video Timeline Model Accuracy"}, "148": {"path": "/video_timeline_modeling/vtm/main.py:384-409", "hash": "519a6882bb13c0583d128e95a8df042c", "title": "Video Timeline Model Accuracy"}, "149": {"path": "/video_timeline_modeling/vtm/main.py:410-438", "hash": "361043897b21db09da9d5da63b4d6bd7", "title": "Model Saving and Prediction Functions"}, "150": {"path": "/video_timeline_modeling/vtm/main.py:439-459", "hash": "3a1e2ec1889e7a93271f652d98bede10", "title": "Model Initialization Based on FLAGS"}, "151": {"path": "/video_timeline_modeling/vtm/main.py:460-477", "hash": "542ccbe57f90ed8a959aa17c582bcb3c", "title": "Creating Teacher Model for Knowledge Distillation"}, "152": {"path": "/video_timeline_modeling/vtm/main.py:478-495", "hash": "5880e58770d4114909a97517b58c0efd", "title": "Train or Load Timeline Model for Inference"}, "153": {"path": "/video_timeline_modeling/vtm/main.py:496-525", "hash": "41b38d8de306eeea5f406c36f3162c6b", "title": "Save, Initialize and Load Model Data"}, "154": {"path": "/video_timeline_modeling/vtm/main.py:526-548", "hash": "2da3cae62c3bac4f679d047b2dbdc25e", "title": "Training and Testing Datasets Iteration with Loss Calculations"}, "155": {"path": "/video_timeline_modeling/vtm/main.py:549-567", "hash": "28d257088981f25ab9723c5bb376e45a", "title": "Distillation-Guided Model Training"}, "156": {"path": "/video_timeline_modeling/vtm/main.py:568-586", "hash": "78b42208c833fb3a2c698e4ebbf88cca", "title": "TensorBoard Writer for Metrics"}, "157": {"path": "/video_timeline_modeling/vtm/main.py:587-596", "hash": "e003d578b9f3994197b5cd0ad155706f", "title": "TensorFlow Job Completion Logging"}, "158": {"path": "/video_timeline_modeling/vtm/model/__init__.py", "hash": "02c62fab7b77e8fad3f40ca4241aca54", "title": "Importing VT-Model Components"}, "159": {"path": "/video_timeline_modeling/vtm/model/attention_head.py", "hash": "c34bd05c3cfd848beee88bbeaca0bde9", "title": "Video Timeline Attention Head"}, "160": {"path": "/video_timeline_modeling/vtm/model/attention_head.py:1-29", "hash": "5b7e186c5e6a17fca88712211c5e0f49", "title": "Attention Head for Video Timeline Modeling"}, "161": {"path": "/video_timeline_modeling/vtm/model/attention_head.py:30-59", "hash": "744d174e873b046dbe7529b80ae205d2", "title": "Attention Head Class and Calculation"}, "162": {"path": "/video_timeline_modeling/vtm/model/attention_head.py:60-60", "hash": "85c02f38f0d1d69d936d90631da83754", "title": "Softmax-Applied Attention Head"}, "163": {"path": "/video_timeline_modeling/vtm/model/encoder.py", "hash": "bbb8eef328abb96b3015b020638c13dd", "title": "Transformer Encoder with Positional Embedding"}, "164": {"path": "/video_timeline_modeling/vtm/model/encoder.py:1-30", "hash": "0b1cf99b8903ec67fba29854f3be4a6d", "title": "Positional Encoding for Transformer Encoder"}, "165": {"path": "/video_timeline_modeling/vtm/model/encoder.py:32-66", "hash": "fa6738d811b8abbeda5de0fa88f8057d", "title": "Positional Encoding for Video Timeline Modeling"}, "166": {"path": "/video_timeline_modeling/vtm/model/encoder.py:67-89", "hash": "af547287fd4e8ed64d7b1965de81d72f", "title": "Transformer Encoder PyTorch Implementation"}, "167": {"path": "/video_timeline_modeling/vtm/model/model.py", "hash": "0c9849959262433f320a4f9f2cdb8195", "title": "Video Timeline Model with Attention-based Cluster Computations"}, "168": {"path": "/video_timeline_modeling/vtm/model/model.py:1-32", "hash": "e5728979f61f108387c33e2c88e81225", "title": "Video Timeline Modeling: Main Model Definition"}, "169": {"path": "/video_timeline_modeling/vtm/model/model.py:33-56", "hash": "49ce32b247f549d51e9f004d82377392", "title": "Initializing Video Timeline Model Parameters"}, "170": {"path": "/video_timeline_modeling/vtm/model/model.py:57-79", "hash": "847c5ec0b6531e0e3549ef214f663576", "title": "Video Timeline Model (VTM) Python Implementation"}, "171": {"path": "/video_timeline_modeling/vtm/model/model.py:80-102", "hash": "de49e8f4d6999d3380772c3823341304", "title": "Batch Video Attention Model"}, "172": {"path": "/video_timeline_modeling/vtm/model/model.py:103-125", "hash": "7ca88a041a9b80f22155e0a6e8bf1dd0", "title": "Attention-based Video Timeline Modeling"}, "173": {"path": "/video_timeline_modeling/vtm/model/model.py:126-154", "hash": "da30d75f238916909346bf4e1184f9e8", "title": "Video Timeline Modeling: Semantics-Aware Cluster Classifier"}, "174": {"path": "/video_timeline_modeling/vtm/model/model.py:155-178", "hash": "23c144958d1399ec278d39145728d85f", "title": "Initializing Video Module and Forward Pass"}, "175": {"path": "/video_timeline_modeling/vtm/model/model.py:179-196", "hash": "723ddeab0cb5e01661a273dee9e63e0c", "title": "Normalized Attention Scores via Log Softmax"}, "176": {"path": "/video_timeline_modeling/vtm/test.py", "hash": "70b508f11080f37128ae39a5a5b462d7", "title": "Video Timeline Modeling Testing with Transformers"}, "177": {"path": "/video_timeline_modeling/vtm/test.py:1-31", "hash": "2e2007cc70b2ff433feeba20db7344d8", "title": "Video Timeline Modeling Test Module"}, "178": {"path": "/video_timeline_modeling/vtm/test.py:32-62", "hash": "621dc244968866fe4d43edd48f2701e9", "title": "Encoder and Attention Head Model Test"}, "179": {"path": "/video_timeline_modeling/vtm/test.py:63-87", "hash": "52cced3d4c6a87bbe50bbe052b70bb50", "title": "Testing Timeline Model Log Score"}, "180": {"path": "/video_timeline_modeling/vtm/test.py:89-108", "hash": "9b699efd56bc4602e37914770962d7bb", "title": "Testing VideoTimeline Modeling Dataset"}, "181": {"path": "/video_timeline_modeling/vtm/test.py:109-126", "hash": "dfa4aff7ff011a1d8ebf7ef41d48cfbf", "title": "Timeline Dataset Initialization and Splitting"}}}