# Data for experiment
target_catalog:
  catalog = %catalog
  separate_repeating_times_in_catalog = True

CatalogDomain:
  train_start_time =      %train_start_time
  validation_start_time = %validation_start_time
  test_start_time =       %test_start_time
  test_end_time =         %test_end_time

# Configure the model (and feature) creation and training methods.

build_encoders:
  include_catalog_columns = True
  include_recent_earthquakes = True
  include_biggest_earthquakes = False
  include_seismicity_rate = True

_mock_earthquake.add_angles = %use_moment_angles

SeismicityRateEncoder.prepare_features:
  grid_side_deg = 0.5
  # lookback        = [1hr,12hr, 2d,    10d,   100d,   3yr,     10yr,     30yr]
  lookback_seconds = [3600,43200,172800,864000,8640000,94610000,315400000,9461000008]
  magnitudes = [2, 3, 4, 5, 6]
SeismicityRateEncoder.build_model:
  units = [32, 32]
  kernel_regularization = @seismicity/tf.keras.regularizers.l1_l2()
seismicity/tf.keras.regularizers.l1_l2.l1 = 0
seismicity/tf.keras.regularizers.l1_l2.l2 = 2e-4

RecentEarthquakesEncoder.prepare_features:
  limit_lookback_seconds = 220752000  # 7 years. Why not.
  max_earthquakes = 80
RecentEarthquakesEncoder.build_model:
  units = [24]
  kernel_regularization = @recent/tf.keras.regularizers.l1_l2()
recent/tf.keras.regularizers.l1_l2.l1 = 0
recent/tf.keras.regularizers.l1_l2.l2 = 4e-4
fully_connected_model:  # Spatial embedding
  layer_sizes = [16]
  activation = 'relu'
  kernel_regularization = @static/tf.keras.regularizers.l1_l2()
static/tf.keras.regularizers.l1_l2.l1 = 0
static/tf.keras.regularizers.l1_l2.l2 = 4e-4

BiggestEarthquakesEncoder.prepare_features:
  limit_lookback_seconds = 1000
  max_earthquakes = 50
BiggestEarthquakesEncoder.build_model:
  units = [24]
  kernel_regularization = @biggest/tf.keras.regularizers.l1_l2()
biggest/tf.keras.regularizers.l1_l2.l1 = 0
biggest/tf.keras.regularizers.l1_l2.l2 = 4e-4


magnitude_prediction_model:
  n_model_parameters = 6 # n = (m kumarswamy)*(3 DOF per kumarswamy)
  hidden_layer_sizes = [256, 64, 16]
  hidden_activation = 'tanh'
  output_activation = 'softplus'
  output_shift = 0.0
  kernel_regularization = @mag_head/tf.keras.regularizers.l1_l2()
mag_head/tf.keras.regularizers.l1_l2.l1 = 0
mag_head/tf.keras.regularizers.l1_l2.l2 = 2e-4

# average_precision_at_recall.delta = 0.001